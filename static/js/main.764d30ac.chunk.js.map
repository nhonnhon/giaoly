{"version":3,"sources":["configs/constant.js","reducers/common.js","store/index.js","configs/routes.js","screens/ImportData/ImportNumber.js","configs/lang.js","screens/ImportData/ImportMemberLevel.js","actions/index.js","screens/ImportData/ImportQuestion.js","screens/ImportData/ImportPointQuestion.js","screens/ImportData/ImportData.js","screens/Dashboard.js","screens/Overview.js","screens/ShowQuestion.js","screens/ListGroupQuestion.js","App.js","index.js"],"names":["DATA_GROUP_POINT","SAVE_ALL_QUESTION","POINT_EACH_QUESTION","CURRENT_MEMBER","dataGroupPoint","pointEachQuestion","initialState","fromJS","amount","currentAmountGroup","currentAmountLevel","listAllQuestion","currentMember","combineReducers","common","state","arguments","length","undefined","_ref","type","payload","set","store","createStore","reducers","routes","ImportData","Dashboard","Overview","ListGroupQuestion","ClassNine","ClassTwo","ClassThree","ClassFour","ClassFive","ClassSix","ClassSeven","ClassEight","ImportNumber","handleChange","event","onInputChange","_this","props","target","value","title","this","react_default","a","createElement","className","onChange","Component","lang","save","saveAll","importData","importQuestion","question","answer","level","levelQuestion","current","selectGroupQuestion","plusPoint","nextQuestion","currentAmount","amountGroup","amountMember","amountLevel","dashboard","overview","backOverview","level1","level2","level3","level4","group1","group2","group3","group4","alertProvideData","alertInCorrectFormat","ImportMemberLevel","_this$props","saveDataGroupAndPoints","groupAndPoint","types","saveQuestionData","data","savePointQuestion","point","ImportQuestion","saveDataQuestion","id","processExcel","workbook","XLSX","read","worksheetLength","SheetNames","datas","i","sheetName","obj","excelRows","utils","sheet_to_row_object_array","Sheets","groupQuestionName","listQuestion","push","localStorage","removeItem","setItem","JSON","stringify","resultData","fileUpload","document","getElementById","test","toLowerCase","FileReader","reader","readAsBinaryString","onload","e","result","files","bytes","Uint8Array","byteLength","String","fromCharCode","readAsArrayBuffer","alert","onClick","PureComponent","mapDispatchToProps","connect","ImportPointQuestion","listMember","onInputAmountChange","val","setState","Object","defineProperty","onInputMemberLevelChange","objectSpread","renderMemberOfEachLevel","box","key","ImportData_ImportMemberLevel","concat","renderQuestionOfEachLevel","ImportData_ImportQuestion","saveAllData","_this$state","_","size","parseInt","arrGroupAndPoint","groupName","totalPoint","members","j","member","eachMember","levelName","k","ImportData_ImportNumber","ImportData_ImportPointQuestion","react_router_dom","to","memberMapping","0","1","2","3","clickMember","currentMemberPoint","setCurrentMember","history","renderGroupAndPoints","map","index","renderGroup","renderMember","keys","parse","getItem","toJS","withRouter","ShowQuestion","correct","b","c","d","showCorrectQuestion","choose","currentQuestion","_this2","plusPointForMemberAndGroup","chooseA","chooseB","chooseC","chooseD","_this$state$correct","style","maxWidth","margin","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","renderGroupQuestion","showQuestion","listLength","randomNumber","Math","floor","random","showListGroupQuestion","currentListQuestion","currentGroupPoint","newPointGroup","newPointMember","_this$props$currentMe","indexGroup","findIndex","findGroup","find","findMember","indexMember","splice","_this$state2","countQuestion","currentCorrect","remove","showCurrentListQuestion","_this$state3","screens_ShowQuestion","isEmpty","console","log","_this$props$currentMe2","_this$state4","toUpper","App","react_router","path","exact","component","rootElement","ReactDOM","render","es","src_App_0"],"mappings":"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","file":"static/js/main.764d30ac.chunk.js","sourcesContent":["export const DATA_GROUP_POINT = \"DATA_GROUP_POINT\";\nexport const SAVE_ALL_QUESTION = \"SAVE_ALL_QUESTION\";\nexport const POINT_EACH_QUESTION = \"POINT_EACH_QUESTION\";\nexport const CURRENT_MEMBER = \"CURRENT_MEMBER\";\n\nexport const dataGroupPoint = \"dataGroupPoint\";\nexport const pointEachQuestion = \"pointEachQuestion\";\n","import { fromJS } from \"immutable\";\nimport { combineReducers } from \"redux\";\nimport {\n  DATA_GROUP_POINT,\n  SAVE_ALL_QUESTION,\n  POINT_EACH_QUESTION,\n  CURRENT_MEMBER\n} from \"../configs/constant\";\n\nconst initialState = fromJS({\n  amount: {\n    currentAmountGroup: 0,\n    currentAmountLevel: 0\n  },\n  pointEachQuestion: 10,\n  dataGroupPoint: [],\n  listAllQuestion: {},\n  currentMember: {}\n});\n\nfunction common(state = initialState, { type, payload }) {\n  switch (type) {\n    case DATA_GROUP_POINT:\n      return state.set(\"dataGroupPoint\", payload);\n\n    case SAVE_ALL_QUESTION:\n      return state.set(\"listAllQuestion\", payload);\n\n    case POINT_EACH_QUESTION:\n      return state.set(\"pointEachQuestion\", payload);\n\n    case CURRENT_MEMBER:\n      return state.set(\"currentMember\", payload);\n\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  common\n});\n","import { createStore } from 'redux'\nimport reducers from '../reducers/common'\nexport const store = createStore(reducers)","export default {\n  ImportData: \"/ImportData\",\n  Dashboard: \"/Dashboard\",\n  Overview: \"/Overview\",\n  ListGroupQuestion: \"/ListGroupQuestion\",\n  ClassNine: \"/ClassOne\",\n  ClassTwo: \"/ClassTwo\",\n  ClassThree: \"/ClassThree\",\n  ClassFour: \"/ClassFour\",\n  ClassFive: \"/ClassFive\",\n  ClassSix: \"/ClassSix\",\n  ClassSeven: \"/ClassSeven\",\n  ClassEight: \"/ClassEight\"\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass ImportNumber extends Component {\n  static propTypes = {\n    onInputChange: PropTypes.func,\n    title: PropTypes.string\n  };\n\n  handleChange = event => {\n    const { onInputChange } = this.props;\n    onInputChange && onInputChange(this.props, event.target.value);\n  };\n\n  render() {\n    const { title } = this.props;\n    return (\n      <div className=\"box-block-border\">\n        <h4 className=\"mb-10\">{title}</h4>\n        <div>\n          <input type=\"number\" onChange={this.handleChange} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ImportNumber;\n","export const lang = {\n  //common\n  save: \"Lưu\",\n  saveAll: \"Lưu tất cả\",\n  importData: \"Nhập dữ liệu\",\n  importQuestion: \"Nhập bộ đề thi\",\n\n  title: \"Câu hỏi thi giáo lí\",\n  question: \"Câu hỏi\",\n  answer: \"Đáp án\",\n  level: \"Cấp độ\",\n  levelQuestion: \"Bộ câu hỏi\",\n  current: \"Hiện tại\",\n  selectGroupQuestion: \"Chọn bộ câu hỏi\",\n  plusPoint: \"Đúng cộng điểm\",\n  nextQuestion: \"Câu tiếp theo\",\n  pointEachQuestion: \"Số điểm cho mỗi câu hỏi\",\n\n  currentAmount: \"Số lượng đã nhập\",\n  amountGroup: \"Số lượng nhóm\",\n  amountMember: \"Số lượng thành viên nhóm\",\n  amountLevel: \"Số cấp độ câu hỏi\",\n\n  //trang chủ\n  dashboard: \"Trang chủ\",\n  overview: \"Tổng quan các đội chơi\",\n  backOverview: \"Quay về trang tổng quan\",\n\n  //level\n  level1: \"Khai tâm\",\n  level2: \"Rước lễ\",\n  level3: \"Thêm sức\",\n  level4: \"Bao đồng\",\n\n  group1: \"đội 1\",\n  group2: \"đội 2\",\n  group3: \"đội 3\",\n  group4: \"đội 4\",\n\n  //alert\n  alertProvideData: \"Dữ liệu chưa được nhập đầy đủ\",\n  alertInCorrectFormat: \"Chưa nhập đầy đủ file excel\"\n};\n","import React, { Component } from \"react\";\nimport { lang } from \"../../configs/lang\";\nimport PropTypes from \"prop-types\";\n\nclass ImportMemberLevel extends Component {\n  static propTypes = {\n    onInputChange: PropTypes.func,\n    value: PropTypes.number,\n    title: PropTypes.string\n  };\n\n  handleChange = event => {\n    const { onInputChange } = this.props;\n    onInputChange && onInputChange(this.props, event.target.value);\n  };\n\n  render() {\n    const { title, value } = this.props;\n    return (\n      <div className=\"box-block-border\">\n        <h4 className=\"mb-10\">{title}</h4>\n        <div>\n          <input type=\"number\" onChange={this.handleChange} />\n        </div>\n        <h4 className=\"mt-10\">\n          {lang.current}:{\" \"}\n          <span className=\"text green\">{value ? value : 0}</span>\n        </h4>\n      </div>\n    );\n  }\n}\n\nexport default ImportMemberLevel;\n","import * as types from \"../configs/constant\";\n\n//get all data from import data and export json data to save local storage\nfunction saveDataGroupAndPoints(groupAndPoint) {\n  return {\n    type: types.DATA_GROUP_POINT,\n    payload: groupAndPoint\n  };\n}\n\nfunction saveQuestionData(data) {\n  return {\n    type: types.SAVE_ALL_QUESTION,\n    payload: data\n  };\n}\n\nfunction savePointQuestion(point) {\n  return {\n    type: types.POINT_EACH_QUESTION,\n    payload: point\n  };\n}\n\nfunction setCurrentMember(data) {\n  return {\n    type: types.CURRENT_MEMBER,\n    payload: data\n  };\n}\n\nexport {\n  saveDataGroupAndPoints,\n  saveQuestionData,\n  savePointQuestion,\n  setCurrentMember\n};\n","import React, { PureComponent } from \"react\";\nimport { lang } from \"../../configs/lang\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport XLSX from \"xlsx\";\nimport { saveQuestionData } from \"../../actions/index\";\n\nclass ImportQuestion extends PureComponent {\n  static propTypes = {\n    onUploadFile: PropTypes.func,\n    saveQuestionData: PropTypes.func,\n    title: PropTypes.string,\n    id: PropTypes.string\n  };\n\n  saveDataQuestion = () => {\n    const { id } = this.props;\n    const processExcel = data => {\n      var workbook = XLSX.read(data, {\n        type: \"binary\"\n      });\n      var worksheet = workbook.SheetNames;\n      var worksheetLength = worksheet.length;\n      var datas = [];\n      for (var i = 0; i < worksheetLength; i++) {\n        var sheetName = workbook.SheetNames[i];\n        var obj = {};\n        var excelRows = XLSX.utils.sheet_to_row_object_array(\n          workbook.Sheets[sheetName]\n        );\n        obj.groupQuestionName = sheetName;\n        obj.listQuestion = excelRows;\n        datas.push(obj);\n      }\n      localStorage.removeItem(id);\n      localStorage.setItem(id, JSON.stringify(datas));\n      const resultData = {};\n      resultData[id] = datas;\n      this.props.saveQuestionData(resultData);\n    };\n\n    var fileUpload = document.getElementById(id);\n    var regex = /^([a-zA-Z0-9\\s_\\\\.\\-:])+(.xls|.xlsx)$/;\n    if (regex.test(fileUpload.value.toLowerCase())) {\n      if (typeof FileReader != \"undefined\") {\n        var reader = new FileReader();\n        if (reader.readAsBinaryString) {\n          reader.onload = function(e) {\n            processExcel(e.target.result);\n          };\n          reader.readAsBinaryString(fileUpload.files[0]);\n        } else {\n          //For IE Browser.\n          reader.onload = function(e) {\n            var data = \"\";\n            var bytes = new Uint8Array(e.target.result);\n            for (var i = 0; i < bytes.byteLength; i++) {\n              data += String.fromCharCode(bytes[i]);\n            }\n            processExcel(data);\n          };\n          reader.readAsArrayBuffer(fileUpload.files[0]);\n        }\n      } else {\n        alert(\"This browser does not support HTML5.\");\n      }\n    } else {\n      alert(lang.alertInCorrectFormat);\n    }\n  };\n\n  render() {\n    const { title, id } = this.props;\n    return (\n      <div className=\"box-block-border\">\n        <h4 className=\"mb-10\">{title}</h4>\n        <div>\n          <input type=\"file\" id={id} />\n        </div>\n        <div className=\"mt-10\">\n          <input\n            type=\"button\"\n            id=\"upload\"\n            value={lang.save}\n            onClick={this.saveDataQuestion}\n            className=\"btn sky\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  saveQuestionData\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(ImportQuestion);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { savePointQuestion } from \"../../actions/index\";\nimport * as types from \"../../configs/constant\";\n\nclass ImportPointQuestion extends Component {\n  static propTypes = {\n    title: PropTypes.string,\n    savePointQuestion: PropTypes.func\n  };\n\n  handleChange = event => {\n    localStorage.removeItem(types.pointEachQuestion);\n    localStorage.setItem(types.pointEachQuestion, event.target.value);\n    this.props.savePointQuestion(event.target.value);\n  };\n\n  render() {\n    const { title } = this.props;\n    return (\n      <div className=\"box-block-border\">\n        <h4 className=\"mb-10\">{title}</h4>\n        <div>\n          <input type=\"number\" onChange={this.handleChange} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  savePointQuestion\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(ImportPointQuestion);\n","//Bộ số 1\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport routes from \"../../configs/routes\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\nimport ImportNumber from \"./ImportNumber\";\nimport ImportMemberLevel from \"./ImportMemberLevel\";\nimport ImportQuestion from \"./ImportQuestion\";\nimport ImportPointQuestion from \"./ImportPointQuestion\";\nimport { lang } from \"../../configs/lang\";\nimport { saveDataGroupAndPoints } from \"../../actions/index\";\nimport { dataGroupPoint } from \"../../configs/constant\";\n\nclass ImportData extends Component {\n  static propTypes = {\n    saveDataGroupAndPoints: PropTypes.func\n  };\n\n  state = {\n    amountGroup: 0,\n    amountLevel: 0,\n    listMember: {}\n  };\n\n  //change input of amount group or amount level\n  onInputAmountChange = (props, val) => {\n    this.setState({\n      [props.id]: val\n    });\n  };\n\n  //change input member of each level\n  onInputMemberLevelChange = (props, val) => {\n    const { listMember } = this.state;\n    listMember[props.id] = val;\n    this.setState({\n      listMember: {\n        ...listMember\n      }\n    });\n  };\n\n  //render input member of each level\n  renderMemberOfEachLevel = () => {\n    const { amountLevel } = this.state;\n    let i = 0;\n    let box = [];\n    for (i; i < amountLevel; i++) {\n      box.push(\n        <div key={i}>\n          <ImportMemberLevel\n            id={`level${i + 1}`}\n            title={`${lang.level} ${i + 1}`}\n            onInputChange={this.onInputMemberLevelChange}\n          />\n        </div>\n      );\n    }\n    return box;\n  };\n\n  //render input to import question of each level\n  renderQuestionOfEachLevel = () => {\n    const { amountLevel } = this.state;\n    let i = 0;\n    let box = [];\n    for (i; i < amountLevel; i++) {\n      box.push(\n        <div key={i}>\n          <ImportQuestion\n            title={`${lang.levelQuestion} ${i + 1}`}\n            id={`level${i + 1}`}\n          />\n        </div>\n      );\n    }\n    return box;\n  };\n\n  //save all data\n  saveAllData = () => {\n    const { amountGroup, amountLevel, listMember } = this.state;\n    if (\n      amountGroup === 0 ||\n      amountLevel === 0 ||\n      _.size(listMember) !== parseInt(amountLevel)\n    ) {\n      alert(lang.alertProvideData);\n    } else {\n      const arrGroupAndPoint = [];\n      for (let i = 0; i < amountGroup; i++) {\n        const groupAndPoint = {};\n        groupAndPoint.groupName = `group${i + 1}`;\n        groupAndPoint.totalPoint = 0;\n        groupAndPoint.members = [];\n        for (let j = 0; j < _.size(listMember); j++) {\n          const member = listMember[`level${j + 1}`];\n          const eachMember = {};\n          eachMember.levelName = `level${j + 1}`;\n          if (member > 1) {\n            for (let k = 0; k < member; k++) {\n              eachMember[`member${j + 1}_${k + 1}`] = 0;\n            }\n          } else {\n            eachMember[`member${j + 1}`] = 0;\n          }\n          groupAndPoint.members.push(eachMember);\n        }\n        arrGroupAndPoint.push(groupAndPoint);\n      }\n      localStorage.removeItem(dataGroupPoint);\n      localStorage.setItem(dataGroupPoint, JSON.stringify(arrGroupAndPoint));\n      this.props.saveDataGroupAndPoints(arrGroupAndPoint);\n    }\n  };\n\n  render() {\n    const { amountLevel } = this.state;\n    return (\n      <div className=\"container\">\n        <h1 className=\"text-center mt-20\">{lang.importData}</h1>\n        <div className=\"row mt-40\">\n          <div className=\"col-3\">\n            <ImportNumber\n              id=\"amountGroup\"\n              title={lang.amountGroup}\n              onInputChange={this.onInputAmountChange}\n            />\n          </div>\n          <div className=\"col-3\">\n            <ImportNumber\n              id=\"amountLevel\"\n              title={lang.amountLevel}\n              onInputChange={this.onInputAmountChange}\n            />\n          </div>\n          <div className=\"col-3\">\n            <ImportPointQuestion title={lang.pointEachQuestion} />\n          </div>\n        </div>\n\n        {amountLevel > 0 ? (\n          <div>\n            <h2 className=\"mt-40 text-blue\">{lang.amountMember}</h2>\n            <div className=\"row mt-10\">{this.renderMemberOfEachLevel()}</div>\n            <h2 className=\"mt-40 text-blue\">{lang.importQuestion}</h2>\n            <div className=\"row mt-10\">{this.renderQuestionOfEachLevel()}</div>\n          </div>\n        ) : null}\n\n        <div className=\"mt-40\">\n          <input\n            type=\"button\"\n            className=\"btn green\"\n            value={lang.saveAll}\n            onClick={this.saveAllData}\n          />\n        </div>\n\n        <Link className=\"btn blue\" to={routes.Overview}>\n          {lang.overview}\n        </Link>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = () => {\n  return {\n    amount: \"\"\n  };\n};\n\nconst mapDispatchToProps = {\n  saveDataGroupAndPoints\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ImportData);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n// import PropTypes from \"prop-types\";\n// import { changeLanguage } from \"./actions/index\";\nimport routes from \"../configs/routes\";\nimport { lang } from \"../configs/lang\";\n// import _ from \"lodash\";\n\nclass Dashboard extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>{lang.overview}</h1>\n        <div>\n          <Link className=\"btn blue\" to={routes.ImportData}>\n            {lang.importData}\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  null\n)(Dashboard);\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n// import routes from \"../configs/routes\";\nimport { lang } from \"../configs/lang\";\nimport { saveDataGroupAndPoints, setCurrentMember } from \"../actions/index\";\nimport _ from \"lodash\";\nimport * as types from \"../configs/constant\";\nimport routes from \"../configs/routes\";\n\nconst memberMapping = {\n  0: \"Khai tâm\",\n  1: \"Rước lễ\",\n  2: \"Thêm sức\",\n  3: \"Bao đồng\"\n};\n\nclass Overview extends Component {\n  static propTypes = {\n    saveDataGroupAndPoints: PropTypes.func,\n    setCurrentMember: PropTypes.func,\n    dataGroupPoint: PropTypes.array,\n    history: PropTypes.any\n  };\n\n  componentDidMount() {\n    const groupAndPoint = JSON.parse(\n      localStorage.getItem(types.dataGroupPoint)\n    );\n    this.props.saveDataGroupAndPoints(groupAndPoint);\n  }\n\n  clickMember = (key, groupName, level, totalPoint, currentMemberPoint) => {\n    this.props.setCurrentMember({\n      id: key,\n      groupName: groupName,\n      level: `level${level + 1}`,\n      totalPoint: totalPoint,\n      currentMemberPoint: currentMemberPoint\n    });\n    this.props.history.push(routes.ListGroupQuestion);\n  };\n\n  renderGroupAndPoints = () => {\n    const { dataGroupPoint } = this.props;\n    return _.map(dataGroupPoint, (data, index) => {\n      return (\n        <div key={index} className=\"col-3\">\n          <div className=\"group-card\">\n            <div className=\"group-header\">\n              <div className=\"row alignCenter\">\n                <div className=\"col-8\">\n                  <h3>{`Đội ${index + 1}`}</h3>\n                </div>\n                <div className=\"col-4 text-center\">\n                  <div className=\"total-point bold text-red\">\n                    {data.totalPoint}\n                  </div>\n                </div>\n              </div>\n            </div>\n            {this.renderGroup(data)}\n          </div>\n        </div>\n      );\n    });\n  };\n\n  renderGroup = ({ groupName, members, totalPoint }) =>\n    _.map(members, (member, index) =>\n      this.renderMember(member, groupName, index, totalPoint)\n    );\n\n  renderMember = (member, groupName, level, totalPoint) =>\n    Object.keys(member).map(\n      (key, index) =>\n        key !== \"levelName\" && (\n          <div className={`member-card bold level-${level + 1}`} key={index}>\n            <div\n              className=\"row alignCenter\"\n              onClick={() =>\n                this.clickMember(key, groupName, level, totalPoint, member[key])\n              }\n            >\n              <div className=\"col-8\">\n                <div>\n                  {memberMapping[level]} {index > 1 && index}\n                </div>\n              </div>\n              <div className=\"col-4 text-center bold\">\n                <div>{member[key]}</div>\n              </div>\n            </div>\n          </div>\n        )\n    );\n\n  render() {\n    const { dataGroupPoint } = this.props;\n    return (\n      <div className=\"container\">\n        <div className=\"mt-40 mb-40\">\n          <h1 className=\"text-center\">{lang.overview}</h1>\n          <div className=\"mt-40\">\n            {dataGroupPoint && dataGroupPoint.length ? (\n              <div className=\"row text-uppercase\">\n                {this.renderGroupAndPoints()}\n              </div>\n            ) : (\n              <div>{\"Data chưa được nhập\"}</div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dataGroupPoint: state.common.toJS().dataGroupPoint\n  };\n};\n\nconst mapDispatchToProps = {\n  saveDataGroupAndPoints,\n  setCurrentMember\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(Overview));\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport routes from \"../configs/routes\";\n\nclass ShowQuestion extends Component {\n  static propTypes = {\n    currentCorrect: PropTypes.string,\n    currentQuestion: PropTypes.object,\n    showCorrectQuestion: PropTypes.func,\n    plusPointForMemberAndGroup: PropTypes.func,\n    nextQuestion: PropTypes.func\n  };\n\n  state = {\n    correct: {\n      a: \"\",\n      b: \"\",\n      c: \"\",\n      d: \"\"\n    }\n  };\n\n  showCorrectQuestion = choose => {\n    const { correct } = this.props.currentQuestion;\n    if (correct === choose) {\n      this.setState({\n        correct: {\n          ...this.state.correct,\n          ...{ [choose]: \"correct-answer\" }\n        }\n      });\n    } else {\n      this.setState({\n        correct: {\n          ...this.state.correct,\n          ...{ [choose]: \"error-answer\" }\n        }\n      });\n    }\n  };\n\n  nextQuestion = () => {\n    this.setState(\n      {\n        correct: {\n          a: \"\",\n          b: \"\",\n          c: \"\",\n          d: \"\"\n        }\n      },\n      () => {\n        this.props.nextQuestion();\n      }\n    );\n  };\n\n  render() {\n    const { currentQuestion, plusPointForMemberAndGroup } = this.props;\n\n    const { question, chooseA, chooseB, chooseC, chooseD } = currentQuestion;\n    const { a, b, c, d } = this.state.correct;\n    return (\n      <div className=\"mt-40\">\n        <div style={{ maxWidth: \"800px\", margin: \"0 auto\" }}>\n          <h3 className=\"question-detail\">{question}</h3>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <div\n                className={`choose-answer ${a}`}\n                onClick={() => this.showCorrectQuestion(\"a\")}\n              >{`A. ${chooseA}`}</div>\n            </div>\n            <div className=\"col-6\">\n              <div\n                className={`choose-answer ${b}`}\n                onClick={() => this.showCorrectQuestion(\"b\")}\n              >{`B. ${chooseB}`}</div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <div\n                className={`choose-answer ${c}`}\n                onClick={() => this.showCorrectQuestion(\"c\")}\n              >{`C. ${chooseC}`}</div>\n            </div>\n            <div className=\"col-6\">\n              <div\n                className={`choose-answer ${d}`}\n                onClick={() => this.showCorrectQuestion(\"d\")}\n              >{`D. ${chooseD}`}</div>\n            </div>\n          </div>\n        </div>\n        <div className=\"mt-40\">\n          <div style={{ maxWidth: \"250px\", margin: \"0 auto\" }}>\n            <div className=\"row\">\n              <div>\n                <input\n                  type=\"button\"\n                  className=\"btn green\"\n                  value={\"+\"}\n                  onClick={plusPointForMemberAndGroup}\n                />\n              </div>\n              <div>\n                <input\n                  type=\"button\"\n                  className=\"btn blue\"\n                  value={\">>\"}\n                  onClick={this.nextQuestion}\n                />\n              </div>\n              <div>\n                <Link className=\"btn blue\" to={routes.Overview}>\n                  {\"<<<\"}\n                </Link>\n              </div>\n            </div>\n            {/* {currentCorrect === \"\" ? (\n            <div>\n              <input\n                type=\"button\"\n                className=\"btn green\"\n                value={lang.answer}\n                onClick={showCorrectQuestion}\n              />\n            </div>\n          ) : (\n            <div className=\"row\">\n              <div>\n                <input\n                  type=\"button\"\n                  className=\"btn green\"\n                  value={\"+\"}\n                  onClick={plusPointForMemberAndGroup}\n                />\n              </div>\n              <div>\n                <input\n                  type=\"button\"\n                  className=\"btn blue\"\n                  value={\">>\"}\n                  onClick={nextQuestion}\n                />\n              </div>\n            </div>\n          )} */}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ShowQuestion;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { lang } from \"../configs/lang\";\nimport _ from \"lodash\";\nimport routes from \"../configs/routes\";\nimport {\n  saveQuestionData,\n  saveDataGroupAndPoints,\n  savePointQuestion\n} from \"../actions/index\";\nimport * as types from \"../configs/constant\";\nimport ShowQuestion from \"./ShowQuestion\";\n\nclass ListGroupQuestion extends Component {\n  static propTypes = {\n    location: PropTypes.object,\n    saveQuestionData: PropTypes.func,\n    saveDataGroupAndPoints: PropTypes.func,\n    savePointQuestion: PropTypes.func,\n    listAllQuestion: PropTypes.any,\n    pointEachQuestion: PropTypes.number,\n    dataGroupPoint: PropTypes.array,\n    currentMember: PropTypes.object,\n    history: PropTypes.any\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      countQuestion: 0,\n      showListGroupQuestion: true,\n      currentListQuestion: [],\n      currentQuestion: {},\n      currentCorrect: \"\",\n      currentGroupPoint: this.props.currentMember.totalPoint,\n      currentMemberPoint: this.props.currentMember.currentMemberPoint\n    };\n  }\n\n  componentDidMount() {\n    const { currentMember } = this.props;\n    if (_.isEmpty(currentMember)) {\n      this.props.history.push(routes.Overview);\n    } else {\n      const { level } = this.props.currentMember;\n      const listAllQuestion = JSON.parse(localStorage.getItem(level));\n      const groupAndPoint = JSON.parse(\n        localStorage.getItem(types.dataGroupPoint)\n      );\n      const pointEachQuestion = JSON.parse(\n        localStorage.getItem(types.pointEachQuestion)\n      );\n      this.props.savePointQuestion(pointEachQuestion);\n      this.props.saveDataGroupAndPoints(groupAndPoint);\n      this.props.saveQuestionData(listAllQuestion);\n    }\n  }\n\n  componentDidUpdate() {\n    const { listAllQuestion } = this.props;\n    const { level } = this.props.currentMember;\n    localStorage.removeItem(level);\n    localStorage.setItem(level, JSON.stringify(listAllQuestion));\n  }\n\n  renderGroupQuestion = () => {\n    const { listAllQuestion } = this.props;\n    return (\n      <div className=\"list-group-question\">\n        <div className=\"row\">\n          {_.map(listAllQuestion, (data, index) => (\n            <div className=\"col-3 mt-40 mb-40\" key={index}>\n              <div\n                className=\"btn-question text-uppercase bold text-center\"\n                onClick={() => {\n                  this.showQuestion(data.listQuestion);\n                }}\n              >\n                <h4>{data.groupQuestionName}</h4>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  showQuestion = listQuestion => {\n    const listLength = listQuestion.length;\n    const randomNumber = Math.floor(Math.random() * listLength);\n    if (listLength === 0) {\n      alert(\"finish\");\n      return;\n    }\n    this.setState({\n      showListGroupQuestion: false,\n      currentQuestion: listQuestion[randomNumber],\n      currentListQuestion: listQuestion\n    });\n  };\n\n  plusPointForMemberAndGroup = () => {\n    const { currentGroupPoint, currentMemberPoint } = this.state;\n    const { pointEachQuestion } = this.props;\n    const newPointGroup = currentGroupPoint + parseInt(pointEachQuestion);\n    const newPointMember = currentMemberPoint + parseInt(pointEachQuestion);\n    this.setState({\n      currentGroupPoint: newPointGroup,\n      currentMemberPoint: newPointMember\n    });\n\n    const { groupName, level, id } = this.props.currentMember;\n    const { dataGroupPoint } = this.props;\n    //get index of group change point\n    const indexGroup = _.findIndex(\n      dataGroupPoint,\n      data => data.groupName === groupName\n    );\n    //get object of group change point\n    const findGroup = _.find(\n      dataGroupPoint,\n      data => data.groupName === groupName\n    );\n    //get list member change point\n    const findMember = _.find(\n      findGroup.members,\n      data => data.levelName === level\n    );\n    //get index of member change point\n    const indexMember = _.findIndex(\n      findGroup.members,\n      data => data.levelName === level\n    );\n    //change new point of member\n    findMember[id] = newPointMember;\n    //replace member change point\n    findGroup.members.splice(indexMember, 1, findMember);\n    // change new point of group\n    findGroup.totalPoint = newPointGroup;\n    // repace group change point\n    dataGroupPoint.splice(indexGroup, 1, findGroup);\n    localStorage.setItem(types.dataGroupPoint, JSON.stringify(dataGroupPoint));\n  };\n\n  nextQuestion = () => {\n    const { currentListQuestion, countQuestion } = this.state;\n    this.setState(\n      {\n        currentCorrect: \"\",\n        countQuestion: countQuestion + 1\n      },\n      () => {\n        this.showQuestion(currentListQuestion);\n      }\n    );\n  };\n\n  showCorrectQuestion = (id, correct) => {\n    const { currentListQuestion } = this.state;\n    _.remove(currentListQuestion, data => data.id === id);\n    this.setState({\n      currentListQuestion: currentListQuestion,\n      currentCorrect: correct\n    });\n  };\n\n  showCurrentListQuestion = () => {\n    const { currentQuestion, currentCorrect } = this.state;\n    const { id, correct } = currentQuestion;\n    return (\n      <ShowQuestion\n        currentQuestion={currentQuestion}\n        currentCorrect={currentCorrect}\n        showCorrectQuestion={() => this.showCorrectQuestion(id, correct)}\n        plusPointForMemberAndGroup={this.plusPointForMemberAndGroup}\n        nextQuestion={this.nextQuestion}\n      />\n    );\n  };\n\n  render() {\n    console.log(this.props); // eslint-disable-line\n    const { groupName, /*id,*/ level } = this.props.currentMember;\n    const {\n      showListGroupQuestion,\n      currentGroupPoint,\n      currentMemberPoint,\n      countQuestion\n    } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"mt-40 mb-40\">\n          <h1 className={`text-center ${level} mb-40`}>\n            {_.toUpper(`Bộ câu hỏi ${lang[level]}`)}\n          </h1>\n          <div className=\"row alignCenter\">\n            <div className=\"col-4\">\n              <h3 className=\"mt-40 mb-40\">\n                {`Số câu hỏi đã thi: `}\n                <span className=\"text-sky point-circle\">{countQuestion}</span>\n              </h3>\n            </div>\n            <div className=\"col-4\">\n              <h3 className=\"mt-40 mb-40\">\n                {`Điểm ${lang[groupName]}: `}\n                <span className=\"text-red point-circle\">\n                  {currentGroupPoint}\n                </span>\n              </h3>\n            </div>\n            <div className=\"col-4\">\n              <h3 className=\"mt-40 mb-40\">\n                {`Điểm thành viên: `}\n                <span className=\"text-green point-circle\">\n                  {currentMemberPoint}\n                </span>\n              </h3>\n            </div>\n          </div>\n\n          {showListGroupQuestion ? (\n            <div className=\"mt-20\">{this.renderGroupQuestion()}</div>\n          ) : (\n            <div>{this.showCurrentListQuestion()}</div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    listAllQuestion: state.common.toJS().listAllQuestion,\n    dataGroupPoint: state.common.toJS().dataGroupPoint,\n    pointEachQuestion: state.common.toJS().pointEachQuestion,\n    currentMember: state.common.toJS().currentMember\n  };\n};\n\nconst mapDispatchToProps = {\n  saveQuestionData,\n  saveDataGroupAndPoints,\n  savePointQuestion\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ListGroupQuestion);\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n// import PropTypes from \"prop-types\";\n// import { changeLanguage } from \"./actions/index\";\nimport routes from \"./configs/routes\";\nimport \"./App.css\";\nimport ImportData from \"./screens/ImportData/ImportData\";\nimport Dashboard from \"./screens/Dashboard\";\nimport Overview from \"./screens/Overview\";\nimport ListGroupQuestion from \"./screens/ListGroupQuestion\";\n\nclass App extends Component {\n  // static propTypes = {\n  //   changeLanguage: PropTypes.func,\n  //   language: PropTypes.string\n  // };\n\n  // state = {\n  //   lange: this.props.language\n  // };\n\n  // componentDidUpdate(prevProps) {\n  //   if (prevProps.language !== this.props.language) {\n  //     this.setState({\n  //       lange: this.props.language\n  //     });\n  //   }\n  // }\n\n  // onChangeLanguage = language => {\n  //   this.props.changeLanguage(language);\n  // };\n\n  render() {\n    return (\n      <Router>\n        <Route path=\"/\" exact component={Dashboard} />\n        <Route path={routes.ImportData} component={ImportData} />\n        <Route path={routes.Overview} component={Overview} />\n        <Route path={routes.ListGroupQuestion} component={ListGroupQuestion} />\n      </Router>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  null\n)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store/index\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement\n);\n"],"sourceRoot":""}