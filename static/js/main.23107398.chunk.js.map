{"version":3,"sources":["configs/constant.js","reducers/common.js","store/index.js","configs/routes.js","screens/ImportData/ImportNumber.js","configs/lang.js","screens/ImportData/ImportMemberLevel.js","actions/index.js","screens/ImportData/ImportQuestion.js","screens/ImportData/ImportPointQuestion.js","screens/ImportData/ImportData.js","screens/Dashboard.js","screens/Overview.js","screens/ShowQuestion.js","screens/ListGroupQuestion.js","App.js","index.js"],"names":["DATA_GROUP_POINT","SAVE_ALL_QUESTION","POINT_EACH_QUESTION","dataGroupPoint","pointEachQuestion","initialState","fromJS","amount","currentAmountGroup","currentAmountLevel","listAllQuestion","combineReducers","common","state","arguments","length","undefined","_ref","type","payload","set","store","createStore","reducers","routes","ImportData","Dashboard","Overview","ListGroupQuestion","ClassNine","ClassTwo","ClassThree","ClassFour","ClassFive","ClassSix","ClassSeven","ClassEight","ImportNumber","handleChange","event","onInputChange","_this","props","target","value","title","this","react_default","a","createElement","className","onChange","Component","lang","save","saveAll","importData","importQuestion","question","answer","level","levelQuestion","current","selectGroupQuestion","plusPoint","nextQuestion","currentAmount","amountGroup","amountMember","amountLevel","dashboard","overview","backOverview","level1","level2","group1","group2","group3","group4","group5","member1","member1_1","member1_2","member1_3","member2","member2_1","member2_2","member2_3","member3","member3_1","member3_2","member3_3","member4","member4_1","member4_2","member4_3","member5","member5_1","member5_2","member5_3","alertProvideData","alertInCorrectFormat","ImportMemberLevel","_this$props","saveDataGroupAndPoints","groupAndPoint","types","saveQuestionData","data","savePointQuestion","point","ImportQuestion","saveDataQuestion","id","processExcel","workbook","XLSX","read","worksheetLength","SheetNames","datas","i","sheetName","obj","excelRows","utils","sheet_to_row_object_array","Sheets","groupQuestionName","listQuestion","push","localStorage","removeItem","setItem","JSON","stringify","resultData","fileUpload","document","getElementById","test","toLowerCase","FileReader","reader","readAsBinaryString","onload","e","result","files","bytes","Uint8Array","byteLength","String","fromCharCode","readAsArrayBuffer","alert","onClick","PureComponent","mapDispatchToProps","connect","ImportPointQuestion","listMember","onInputAmountChange","val","setState","Object","defineProperty","onInputMemberLevelChange","objectSpread","renderMemberOfEachLevel","box","key","ImportData_ImportMemberLevel","concat","renderQuestionOfEachLevel","ImportData_ImportQuestion","saveAllData","_this$state","_","size","parseInt","arrGroupAndPoint","groupName","totalPoint","members","j","member","eachMember","levelName","k","ImportData_ImportNumber","ImportData_ImportPointQuestion","react_router_dom","to","clickMember","currentMemberPoint","history","renderGroupAndPoints","map","index","renderGroup","renderMember","keys","parse","getItem","toJS","withRouter","ShowQuestion","currentQuestion","currentCorrect","showCorrectQuestion","plusPointForMemberAndGroup","chooseA","chooseB","chooseC","chooseD","correct","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","renderGroupQuestion","showQuestion","listLength","randomNumber","Math","floor","random","showListGroupQuestion","currentListQuestion","currentGroupPoint","newPointGroup","newPointMember","_this$props$location$","location","indexGroup","findIndex","findGroup","find","findMember","indexMember","splice","remove","showCurrentListQuestion","_this$state2","screens_ShowQuestion","console","log","_this$props$location$2","_this$state3","App","react_router","path","exact","component","rootElement","ReactDOM","render","es","src_App_0"],"mappings":"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","file":"static/js/main.23107398.chunk.js","sourcesContent":["export const DATA_GROUP_POINT = \"DATA_GROUP_POINT\";\nexport const SAVE_ALL_QUESTION = \"SAVE_ALL_QUESTION\";\nexport const POINT_EACH_QUESTION = \"POINT_EACH_QUESTION\";\n\nexport const dataGroupPoint = \"dataGroupPoint\";\nexport const pointEachQuestion = \"pointEachQuestion\";\n","import { fromJS } from \"immutable\";\nimport { combineReducers } from \"redux\";\nimport {\n  DATA_GROUP_POINT,\n  SAVE_ALL_QUESTION,\n  POINT_EACH_QUESTION\n} from \"../configs/constant\";\n\nconst initialState = fromJS({\n  amount: {\n    currentAmountGroup: 0,\n    currentAmountLevel: 0\n  },\n  pointEachQuestion: 10,\n  dataGroupPoint: [],\n  listAllQuestion: {}\n});\n\nfunction common(state = initialState, { type, payload }) {\n  switch (type) {\n    case DATA_GROUP_POINT:\n      return state.set(\"dataGroupPoint\", payload);\n\n    case SAVE_ALL_QUESTION:\n      return state.set(\"listAllQuestion\", payload);\n\n    case POINT_EACH_QUESTION:\n      return state.set(\"pointEachQuestion\", payload);\n\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  common\n});\n","import { createStore } from 'redux'\nimport reducers from '../reducers/common'\nexport const store = createStore(reducers)","export default {\n  ImportData: \"/ImportData\",\n  Dashboard: \"/Dashboard\",\n  Overview: \"/Overview\",\n  ListGroupQuestion: \"/ListGroupQuestion\",\n  ClassNine: \"/ClassOne\",\n  ClassTwo: \"/ClassTwo\",\n  ClassThree: \"/ClassThree\",\n  ClassFour: \"/ClassFour\",\n  ClassFive: \"/ClassFive\",\n  ClassSix: \"/ClassSix\",\n  ClassSeven: \"/ClassSeven\",\n  ClassEight: \"/ClassEight\"\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass ImportNumber extends Component {\n  static propTypes = {\n    onInputChange: PropTypes.func,\n    title: PropTypes.string\n  };\n\n  handleChange = event => {\n    const { onInputChange } = this.props;\n    onInputChange && onInputChange(this.props, event.target.value);\n  };\n\n  render() {\n    const { title } = this.props;\n    return (\n      <div className=\"box-block-border\">\n        <h4 className=\"mb-10\">{title}</h4>\n        <div>\n          <input type=\"number\" onChange={this.handleChange} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ImportNumber;\n","export const lang = {\n  //common\n  save: \"Lưu\",\n  saveAll: \"Lưu tất cả\",\n  importData: \"Nhập dữ liệu\",\n  importQuestion: \"Nhập bộ đề thi\",\n\n  title: \"Câu hỏi thi giáo lí\",\n  question: \"Câu hỏi\",\n  answer: \"Đáp án\",\n  level: \"Cấp độ\",\n  levelQuestion: \"Bộ câu hỏi\",\n  current: \"Hiện tại\",\n  selectGroupQuestion: \"Chọn bộ câu hỏi\",\n  plusPoint: \"Đúng cộng điểm\",\n  nextQuestion: \"Câu tiếp theo\",\n  pointEachQuestion: \"Số điểm cho mỗi câu hỏi\",\n\n  currentAmount: \"Số lượng đã nhập\",\n  amountGroup: \"Số lượng nhóm\",\n  amountMember: \"Số lượng thành viên nhóm\",\n  amountLevel: \"Số cấp độ câu hỏi\",\n\n  //trang chủ\n  dashboard: \"Trang chủ\",\n  overview: \"Tổng quan\",\n  backOverview: \"Quay về trang tổng quan\",\n\n  //level\n  level1: \"cấp độ 1\",\n  level2: \"cấp độ 2\",\n\n  //group\n  group1: \"Nhóm 1\",\n  group2: \"Nhóm 2\",\n  group3: \"Nhóm 3\",\n  group4: \"Nhóm 4\",\n  group5: \"Nhóm 5\",\n\n  //member\n  member1: \"Thành viên 1\",\n  member1_1: \"Thành viên 1_1\",\n  member1_2: \"Thành viên 1_2\",\n  member1_3: \"Thành viên 1_3\",\n\n  member2: \"Thành viên 2\",\n  member2_1: \"Thành viên 2_1\",\n  member2_2: \"Thành viên 2_2\",\n  member2_3: \"Thành viên 2_3\",\n\n  member3: \"Thành viên 3\",\n  member3_1: \"Thành viên 3_1\",\n  member3_2: \"Thành viên 3_2\",\n  member3_3: \"Thành viên 3_3\",\n\n  member4: \"Thành viên 4\",\n  member4_1: \"Thành viên 4_1\",\n  member4_2: \"Thành viên 4_2\",\n  member4_3: \"Thành viên 4_3\",\n\n  member5: \"Thành viên 5\",\n  member5_1: \"Thành viên 5_1\",\n  member5_2: \"Thành viên 5_2\",\n  member5_3: \"Thành viên 5_3\",\n\n  //alert\n  alertProvideData: \"Dữ liệu chưa được nhập đầy đủ\",\n  alertInCorrectFormat: \"Chưa nhập đầy đủ file excel\"\n};\n","import React, { Component } from \"react\";\nimport { lang } from \"../../configs/lang\";\nimport PropTypes from \"prop-types\";\n\nclass ImportMemberLevel extends Component {\n  static propTypes = {\n    onInputChange: PropTypes.func,\n    value: PropTypes.number,\n    title: PropTypes.string\n  };\n\n  handleChange = event => {\n    const { onInputChange } = this.props;\n    onInputChange && onInputChange(this.props, event.target.value);\n  };\n\n  render() {\n    const { title, value } = this.props;\n    return (\n      <div className=\"box-block-border\">\n        <h4 className=\"mb-10\">{title}</h4>\n        <div>\n          <input type=\"number\" onChange={this.handleChange} />\n        </div>\n        <h4 className=\"mt-10\">\n          {lang.current}:{\" \"}\n          <span className=\"text green\">{value ? value : 0}</span>\n        </h4>\n      </div>\n    );\n  }\n}\n\nexport default ImportMemberLevel;\n","import * as types from \"../configs/constant\";\n\n//get all data from import data and export json data to save local storage\nfunction saveDataGroupAndPoints(groupAndPoint) {\n  return {\n    type: types.DATA_GROUP_POINT,\n    payload: groupAndPoint\n  };\n}\n\nfunction saveQuestionData(data) {\n  return {\n    type: types.SAVE_ALL_QUESTION,\n    payload: data\n  };\n}\n\nfunction savePointQuestion(point) {\n  return {\n    type: types.POINT_EACH_QUESTION,\n    payload: point\n  };\n}\n\nexport { saveDataGroupAndPoints, saveQuestionData, savePointQuestion };\n","import React, { PureComponent } from \"react\";\nimport { lang } from \"../../configs/lang\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport XLSX from \"xlsx\";\nimport { saveQuestionData } from \"../../actions/index\";\n\nclass ImportQuestion extends PureComponent {\n  static propTypes = {\n    onUploadFile: PropTypes.func,\n    saveQuestionData: PropTypes.func,\n    title: PropTypes.string,\n    id: PropTypes.string\n  };\n\n  saveDataQuestion = () => {\n    const { id } = this.props;\n    const processExcel = data => {\n      var workbook = XLSX.read(data, {\n        type: \"binary\"\n      });\n\n      var worksheet = workbook.SheetNames;\n      var worksheetLength = worksheet.length;\n      var datas = [];\n      for (var i = 0; i < worksheetLength; i++) {\n        var sheetName = workbook.SheetNames[i];\n        var obj = {};\n        var excelRows = XLSX.utils.sheet_to_row_object_array(\n          workbook.Sheets[sheetName]\n        );\n        obj.groupQuestionName = sheetName;\n        obj.listQuestion = excelRows;\n        datas.push(obj);\n      }\n      localStorage.removeItem(id);\n      localStorage.setItem(id, JSON.stringify(datas));\n      const resultData = {};\n      resultData[id] = datas;\n      this.props.saveQuestionData(resultData);\n    };\n\n    var fileUpload = document.getElementById(id);\n    var regex = /^([a-zA-Z0-9\\s_\\\\.\\-:])+(.xls|.xlsx)$/;\n    if (regex.test(fileUpload.value.toLowerCase())) {\n      if (typeof FileReader != \"undefined\") {\n        var reader = new FileReader();\n        if (reader.readAsBinaryString) {\n          reader.onload = function(e) {\n            processExcel(e.target.result);\n          };\n          reader.readAsBinaryString(fileUpload.files[0]);\n        } else {\n          //For IE Browser.\n          reader.onload = function(e) {\n            var data = \"\";\n            var bytes = new Uint8Array(e.target.result);\n            for (var i = 0; i < bytes.byteLength; i++) {\n              data += String.fromCharCode(bytes[i]);\n            }\n            processExcel(data);\n          };\n          reader.readAsArrayBuffer(fileUpload.files[0]);\n        }\n      } else {\n        alert(\"This browser does not support HTML5.\");\n      }\n    } else {\n      alert(lang.alertInCorrectFormat);\n    }\n  };\n\n  render() {\n    const { title, id } = this.props;\n    return (\n      <div className=\"box-block-border\">\n        <h4 className=\"mb-10\">{title}</h4>\n        <div>\n          <input type=\"file\" id={id} />\n        </div>\n        <div className=\"mt-10\">\n          <input\n            type=\"button\"\n            id=\"upload\"\n            value={lang.save}\n            onClick={this.saveDataQuestion}\n            className=\"btn sky\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  saveQuestionData\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(ImportQuestion);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { savePointQuestion } from \"../../actions/index\";\nimport * as types from \"../../configs/constant\";\n\nclass ImportPointQuestion extends Component {\n  static propTypes = {\n    title: PropTypes.string,\n    savePointQuestion: PropTypes.func\n  };\n\n  handleChange = event => {\n    localStorage.removeItem(types.pointEachQuestion);\n    localStorage.setItem(types.pointEachQuestion, event.target.value);\n    this.props.savePointQuestion(event.target.value);\n  };\n\n  render() {\n    const { title } = this.props;\n    return (\n      <div className=\"box-block-border\">\n        <h4 className=\"mb-10\">{title}</h4>\n        <div>\n          <input type=\"number\" onChange={this.handleChange} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  savePointQuestion\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(ImportPointQuestion);\n","//Bộ số 1\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport routes from \"../../configs/routes\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\nimport ImportNumber from \"./ImportNumber\";\nimport ImportMemberLevel from \"./ImportMemberLevel\";\nimport ImportQuestion from \"./ImportQuestion\";\nimport ImportPointQuestion from \"./ImportPointQuestion\";\nimport { lang } from \"../../configs/lang\";\nimport { saveDataGroupAndPoints } from \"../../actions/index\";\nimport { dataGroupPoint } from \"../../configs/constant\";\n\nclass ImportData extends Component {\n  static propTypes = {\n    saveDataGroupAndPoints: PropTypes.func\n  };\n\n  state = {\n    amountGroup: 0,\n    amountLevel: 0,\n    listMember: {}\n  };\n\n  //change input of amount group or amount level\n  onInputAmountChange = (props, val) => {\n    this.setState({\n      [props.id]: val\n    });\n  };\n\n  //change input member of each level\n  onInputMemberLevelChange = (props, val) => {\n    const { listMember } = this.state;\n    listMember[props.id] = val;\n    this.setState({\n      listMember: {\n        ...listMember\n      }\n    });\n  };\n\n  //render input member of each level\n  renderMemberOfEachLevel = () => {\n    const { amountLevel } = this.state;\n    let i = 0;\n    let box = [];\n    for (i; i < amountLevel; i++) {\n      box.push(\n        <div key={i}>\n          <ImportMemberLevel\n            id={`level${i + 1}`}\n            title={`${lang.level} ${i + 1}`}\n            onInputChange={this.onInputMemberLevelChange}\n          />\n        </div>\n      );\n    }\n    return box;\n  };\n\n  //render input to import question of each level\n  renderQuestionOfEachLevel = () => {\n    const { amountLevel } = this.state;\n    let i = 0;\n    let box = [];\n    for (i; i < amountLevel; i++) {\n      box.push(\n        <div key={i}>\n          <ImportQuestion\n            title={`${lang.levelQuestion} ${i + 1}`}\n            id={`level${i + 1}`}\n          />\n        </div>\n      );\n    }\n    return box;\n  };\n\n  //save all data\n  saveAllData = () => {\n    const { amountGroup, amountLevel, listMember } = this.state;\n    if (\n      amountGroup === 0 ||\n      amountLevel === 0 ||\n      _.size(listMember) !== parseInt(amountLevel)\n    ) {\n      alert(lang.alertProvideData);\n    } else {\n      const arrGroupAndPoint = [];\n      for (let i = 0; i < amountGroup; i++) {\n        const groupAndPoint = {};\n        groupAndPoint.groupName = `group${i + 1}`;\n        groupAndPoint.totalPoint = 0;\n        groupAndPoint.members = [];\n        for (let j = 0; j < _.size(listMember); j++) {\n          const member = listMember[`level${j + 1}`];\n          const eachMember = {};\n          eachMember.levelName = `level${j + 1}`;\n          if (member > 1) {\n            for (let k = 0; k < member; k++) {\n              eachMember[`member${j + 1}_${k + 1}`] = 0;\n            }\n          } else {\n            eachMember[`member${j + 1}`] = 0;\n          }\n          groupAndPoint.members.push(eachMember);\n        }\n        arrGroupAndPoint.push(groupAndPoint);\n      }\n      localStorage.removeItem(dataGroupPoint);\n      localStorage.setItem(dataGroupPoint, JSON.stringify(arrGroupAndPoint));\n      this.props.saveDataGroupAndPoints(arrGroupAndPoint);\n    }\n  };\n\n  render() {\n    const { amountLevel } = this.state;\n    return (\n      <div className=\"container\">\n        <h1 className=\"text-center mt-20\">{lang.importData}</h1>\n        <div className=\"row mt-40\">\n          <div className=\"col-3\">\n            <ImportNumber\n              id=\"amountGroup\"\n              title={lang.amountGroup}\n              onInputChange={this.onInputAmountChange}\n            />\n          </div>\n          <div className=\"col-3\">\n            <ImportNumber\n              id=\"amountLevel\"\n              title={lang.amountLevel}\n              onInputChange={this.onInputAmountChange}\n            />\n          </div>\n          <div className=\"col-3\">\n            <ImportPointQuestion title={lang.pointEachQuestion} />\n          </div>\n        </div>\n\n        {amountLevel > 0 ? (\n          <div>\n            <h2 className=\"mt-40 text-blue\">{lang.amountMember}</h2>\n            <div className=\"row mt-10\">{this.renderMemberOfEachLevel()}</div>\n            <h2 className=\"mt-40 text-blue\">{lang.importQuestion}</h2>\n            <div className=\"row mt-10\">{this.renderQuestionOfEachLevel()}</div>\n          </div>\n        ) : null}\n\n        <div className=\"mt-40\">\n          <input\n            type=\"button\"\n            className=\"btn green\"\n            value={lang.saveAll}\n            onClick={this.saveAllData}\n          />\n        </div>\n\n        <Link className=\"btn blue\" to={routes.Overview}>\n          {lang.overview}\n        </Link>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = () => {\n  return {\n    amount: \"\"\n  };\n};\n\nconst mapDispatchToProps = {\n  saveDataGroupAndPoints\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ImportData);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n// import PropTypes from \"prop-types\";\n// import { changeLanguage } from \"./actions/index\";\nimport routes from \"../configs/routes\";\nimport { lang } from \"../configs/lang\";\n// import _ from \"lodash\";\n\nclass Dashboard extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>{lang.overview}</h1>\n        <div>\n          <Link className=\"btn blue\" to={routes.ImportData}>\n            {lang.importData}\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  null\n)(Dashboard);\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n// import routes from \"../configs/routes\";\nimport { lang } from \"../configs/lang\";\nimport { saveDataGroupAndPoints } from \"../actions/index\";\nimport _ from \"lodash\";\nimport * as types from \"../configs/constant\";\nimport routes from \"../configs/routes\";\n\nclass Overview extends Component {\n  static propTypes = {\n    saveDataGroupAndPoints: PropTypes.func,\n    dataGroupPoint: PropTypes.array,\n    history: PropTypes.any\n  };\n\n  componentDidMount() {\n    const groupAndPoint = JSON.parse(\n      localStorage.getItem(types.dataGroupPoint)\n    );\n    this.props.saveDataGroupAndPoints(groupAndPoint);\n  }\n\n  clickMember = (key, groupName, level, totalPoint, currentMemberPoint) => {\n    this.props.history.push(routes.ListGroupQuestion, {\n      id: key,\n      groupName: groupName,\n      level: `level${level + 1}`,\n      totalPoint: totalPoint,\n      currentMemberPoint: currentMemberPoint\n    });\n  };\n\n  renderGroupAndPoints = () => {\n    const { dataGroupPoint } = this.props;\n    return _.map(dataGroupPoint, (data, index) => {\n      return (\n        <div key={index} className=\"col-3\">\n          <div className=\"group-card\">\n            <div className=\"group-header\">\n              <div className=\"row alignCenter\">\n                <div className=\"col-8\">\n                  <h3>{lang[data.groupName]}</h3>\n                </div>\n                <div className=\"col-4 text-center\">\n                  <div className=\"total-point bold text-red\">\n                    {data.totalPoint}\n                  </div>\n                </div>\n              </div>\n            </div>\n            {this.renderGroup(data)}\n          </div>\n        </div>\n      );\n    });\n  };\n\n  renderGroup = ({ groupName, members, totalPoint }) =>\n    _.map(members, (member, index) =>\n      this.renderMember(member, groupName, index, totalPoint)\n    );\n\n  renderMember = (member, groupName, level, totalPoint) =>\n    Object.keys(member).map(\n      (key, index) =>\n        key !== \"levelName\" && (\n          <div className=\"member-card\" key={index}>\n            <div\n              className=\"row alignCenter\"\n              onClick={() =>\n                this.clickMember(key, groupName, level, totalPoint, member[key])\n              }\n            >\n              <div className=\"col-8\">\n                <div>{lang[key]}</div>\n              </div>\n              <div className=\"col-4 text-center bold text-green\">\n                <div>{member[key]}</div>\n              </div>\n            </div>\n          </div>\n        )\n    );\n\n  render() {\n    const { dataGroupPoint } = this.props;\n    return (\n      <div className=\"container\">\n        <h1>{lang.overview}</h1>\n        <div className=\"mt-20\">\n          {dataGroupPoint && dataGroupPoint.length ? (\n            <div className=\"row text-uppercase\">\n              {this.renderGroupAndPoints()}\n            </div>\n          ) : (\n            <div>{\"Data chưa được nhập\"}</div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dataGroupPoint: state.common.toJS().dataGroupPoint\n  };\n};\n\nconst mapDispatchToProps = {\n  saveDataGroupAndPoints\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(Overview));\n","import React, { Component } from \"react\";\nimport { lang } from \"../configs/lang\";\nimport PropTypes from \"prop-types\";\n\nclass ShowQuestion extends Component {\n  static propTypes = {\n    currentCorrect: PropTypes.string,\n    currentQuestion: PropTypes.object,\n    showCorrectQuestion: PropTypes.func,\n    plusPointForMemberAndGroup: PropTypes.func,\n    nextQuestion: PropTypes.func\n  };\n\n  render() {\n    const {\n      currentQuestion,\n      currentCorrect,\n      showCorrectQuestion,\n      plusPointForMemberAndGroup,\n      nextQuestion\n    } = this.props;\n    const {\n      question,\n      chooseA,\n      chooseB,\n      chooseC,\n      chooseD,\n      correct\n    } = currentQuestion;\n    return (\n      <div className=\"mt-40\">\n        <div>\n          <h3 className=\"choose-answer\">{question}</h3>\n          <div\n            className={`choose-answer ${\n              currentCorrect === \"a\" ? \"text-blue bold\" : \"\"\n            }`}\n          >{`A. ${chooseA}`}</div>\n          <div\n            className={`choose-answer ${\n              currentCorrect === \"b\" ? \"text-blue bold\" : \"\"\n            }`}\n          >{`B. ${chooseB}`}</div>\n          <div\n            className={`choose-answer ${\n              currentCorrect === \"c\" ? \"text-blue bold\" : \"\"\n            }`}\n          >{`C. ${chooseC}`}</div>\n          <div\n            className={`choose-answer ${\n              currentCorrect === \"d\" ? \"text-blue bold\" : \"\"\n            }`}\n          >{`D. ${chooseD}`}</div>\n          <div className=\"choose-answer\">{`correct. ${correct}`}</div>\n        </div>\n        <div className=\"mt-40\">\n          {currentCorrect === \"\" ? (\n            <div>\n              <input\n                type=\"button\"\n                className=\"btn green\"\n                value={lang.answer}\n                onClick={showCorrectQuestion}\n              />\n            </div>\n          ) : (\n            <div className=\"row\">\n              <div>\n                <input\n                  type=\"button\"\n                  className=\"btn green\"\n                  value={lang.plusPoint}\n                  onClick={plusPointForMemberAndGroup}\n                />\n              </div>\n              <div>\n                <input\n                  type=\"button\"\n                  className=\"btn blue\"\n                  value={lang.nextQuestion}\n                  onClick={nextQuestion}\n                />\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ShowQuestion;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { lang } from \"../configs/lang\";\nimport _ from \"lodash\";\nimport { Link } from \"react-router-dom\";\nimport routes from \"../configs/routes\";\nimport {\n  saveQuestionData,\n  saveDataGroupAndPoints,\n  savePointQuestion\n} from \"../actions/index\";\nimport * as types from \"../configs/constant\";\nimport ShowQuestion from \"./ShowQuestion\";\n\nclass ListGroupQuestion extends Component {\n  static propTypes = {\n    location: PropTypes.object,\n    saveQuestionData: PropTypes.func,\n    saveDataGroupAndPoints: PropTypes.func,\n    savePointQuestion: PropTypes.func,\n    listAllQuestion: PropTypes.any,\n    pointEachQuestion: PropTypes.number,\n    dataGroupPoint: PropTypes.array\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      showListGroupQuestion: true,\n      currentListQuestion: [],\n      currentQuestion: {},\n      currentCorrect: \"\",\n      currentGroupPoint: this.props.location.state.totalPoint,\n      currentMemberPoint: this.props.location.state.currentMemberPoint\n    };\n  }\n\n  componentDidMount() {\n    const { level } = this.props.location.state;\n    const listAllQuestion = JSON.parse(localStorage.getItem(level));\n    const groupAndPoint = JSON.parse(\n      localStorage.getItem(types.dataGroupPoint)\n    );\n    const pointEachQuestion = JSON.parse(\n      localStorage.getItem(types.pointEachQuestion)\n    );\n    this.props.savePointQuestion(pointEachQuestion);\n    this.props.saveDataGroupAndPoints(groupAndPoint);\n    this.props.saveQuestionData(listAllQuestion);\n  }\n\n  componentDidUpdate() {\n    const { listAllQuestion } = this.props;\n    const { level } = this.props.location.state;\n    localStorage.removeItem(level);\n    localStorage.setItem(level, JSON.stringify(listAllQuestion));\n  }\n\n  renderGroupQuestion = () => {\n    const { listAllQuestion } = this.props;\n    return (\n      <div className=\"row\">\n        {_.map(listAllQuestion, (data, index) => (\n          <div className=\"col-2 mt-20 mb-20\" key={index}>\n            <div\n              className=\"btn-question text-uppercase bold text-center\"\n              onClick={() => {\n                this.showQuestion(data.listQuestion);\n              }}\n            >\n              {data.groupQuestionName}\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  showQuestion = listQuestion => {\n    const listLength = listQuestion.length;\n    const randomNumber = Math.floor(Math.random() * listLength);\n    if (listLength === 0) {\n      alert(\"finish\");\n      return;\n    }\n    this.setState({\n      showListGroupQuestion: false,\n      currentQuestion: listQuestion[randomNumber],\n      currentListQuestion: listQuestion\n    });\n  };\n\n  plusPointForMemberAndGroup = () => {\n    const { currentGroupPoint, currentMemberPoint } = this.state;\n    const { pointEachQuestion } = this.props;\n    const newPointGroup = currentGroupPoint + parseInt(pointEachQuestion);\n    const newPointMember = currentMemberPoint + parseInt(pointEachQuestion);\n    this.setState({\n      currentGroupPoint: newPointGroup,\n      currentMemberPoint: newPointMember\n    });\n\n    const { groupName, level, id } = this.props.location.state;\n    const { dataGroupPoint } = this.props;\n    //get index of group change point\n    const indexGroup = _.findIndex(\n      dataGroupPoint,\n      data => data.groupName === groupName\n    );\n    //get object of group change point\n    const findGroup = _.find(\n      dataGroupPoint,\n      data => data.groupName === groupName\n    );\n    //get list member change point\n    const findMember = _.find(\n      findGroup.members,\n      data => data.levelName === level\n    );\n    //get index of member change point\n    const indexMember = _.findIndex(\n      findGroup.members,\n      data => data.levelName === level\n    );\n    //change new point of member\n    findMember[id] = newPointMember;\n    //replace member change point\n    findGroup.members.splice(indexMember, 1, findMember);\n    // change new point of group\n    findGroup.totalPoint = newPointGroup;\n    // repace group change point\n    dataGroupPoint.splice(indexGroup, 1, findGroup);\n    localStorage.setItem(types.dataGroupPoint, JSON.stringify(dataGroupPoint));\n  };\n\n  nextQuestion = () => {\n    const { currentListQuestion } = this.state;\n    this.setState(\n      {\n        currentCorrect: \"\"\n      },\n      () => {\n        this.showQuestion(currentListQuestion);\n      }\n    );\n  };\n\n  showCorrectQuestion = (id, correct) => {\n    const { currentListQuestion } = this.state;\n    _.remove(currentListQuestion, data => data.id === id);\n    this.setState({\n      currentListQuestion: currentListQuestion,\n      currentCorrect: correct\n    });\n  };\n\n  showCurrentListQuestion = () => {\n    const { currentQuestion, currentCorrect } = this.state;\n    const { id, correct } = currentQuestion;\n    return (\n      <ShowQuestion\n        currentQuestion={currentQuestion}\n        currentCorrect={currentCorrect}\n        showCorrectQuestion={() => this.showCorrectQuestion(id, correct)}\n        plusPointForMemberAndGroup={this.plusPointForMemberAndGroup}\n        nextQuestion={this.nextQuestion}\n      />\n    );\n  };\n\n  render() {\n    console.log(this.props); // eslint-disable-line\n    const { groupName, id, level } = this.props.location.state;\n    const {\n      showListGroupQuestion,\n      currentGroupPoint,\n      currentMemberPoint\n    } = this.state;\n    return (\n      <div className=\"container\">\n        <h1>{lang.selectGroupQuestion}</h1>\n        <h2 className=\"mt-20\">{`${lang.levelQuestion} ${lang[level]}`}</h2>\n        <div className=\"row\">\n          <div className=\"col-6\">\n            <h3 className=\"mt-20\">\n              {`${lang[id]}: `}\n              <span className=\"text-green\">{currentMemberPoint}</span>\n            </h3>\n          </div>\n          <div className=\"col-6\">\n            <h3 className=\"mt-20\">\n              {`${lang[groupName]}: `}\n              <span className=\"text-red\">{currentGroupPoint}</span>\n            </h3>\n          </div>\n        </div>\n\n        {showListGroupQuestion ? (\n          <div className=\"mt-20\">{this.renderGroupQuestion()}</div>\n        ) : (\n          <div>{this.showCurrentListQuestion()}</div>\n        )}\n        <div className=\"mt-20\">\n          <Link className=\"btn blue\" to={routes.Overview}>\n            {lang.backOverview}\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    listAllQuestion: state.common.toJS().listAllQuestion,\n    dataGroupPoint: state.common.toJS().dataGroupPoint,\n    pointEachQuestion: state.common.toJS().pointEachQuestion\n  };\n};\n\nconst mapDispatchToProps = {\n  saveQuestionData,\n  saveDataGroupAndPoints,\n  savePointQuestion\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ListGroupQuestion);\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n// import PropTypes from \"prop-types\";\n// import { changeLanguage } from \"./actions/index\";\nimport routes from \"./configs/routes\";\nimport \"./App.css\";\nimport ImportData from \"./screens/ImportData/ImportData\";\nimport Dashboard from \"./screens/Dashboard\";\nimport Overview from \"./screens/Overview\";\nimport ListGroupQuestion from \"./screens/ListGroupQuestion\";\n\nclass App extends Component {\n  // static propTypes = {\n  //   changeLanguage: PropTypes.func,\n  //   language: PropTypes.string\n  // };\n\n  // state = {\n  //   lange: this.props.language\n  // };\n\n  // componentDidUpdate(prevProps) {\n  //   if (prevProps.language !== this.props.language) {\n  //     this.setState({\n  //       lange: this.props.language\n  //     });\n  //   }\n  // }\n\n  // onChangeLanguage = language => {\n  //   this.props.changeLanguage(language);\n  // };\n\n  render() {\n    return (\n      <Router>\n        <Route path=\"/\" exact component={Dashboard} />\n        <Route path={routes.ImportData} component={ImportData} />\n        <Route path={routes.Overview} component={Overview} />\n        <Route path={routes.ListGroupQuestion} component={ListGroupQuestion} />\n      </Router>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  null\n)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store/index\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement\n);\n"],"sourceRoot":""}